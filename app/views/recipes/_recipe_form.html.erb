<br>


<%= simple_form_for @recipe, class: 'form-recipe' do |f| %>
  <h4>Choose Your Ingredients</h4>

  <%= f.hidden_field :dog_id, value: @user.dog.id %>

  <div id="doses">
    <%= f.simple_fields_for :doses do |dose| %>
      <%= render 'dose_fields', f: dose %>
    <% end %>
    <div class="links">
      <%= link_to_add_association '+ Add Ingredient', f, :doses, class: 'btn btn-add' %>
    </div>
  </div>

  <div class="form-submission-section hide">
    <br>
    <hr/>

    <%= link_to 'Save Recipe', 'javascript:showRecipeNameModal();', class: 'btn btn-info' %>
  </div>

  <div class="modal fade" id="recipe-name-form-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title" id="exampleModalLabel">Almost there! Give your recipe a name.</h4>
        </div>
        <div class="modal-body">
          <form class="form-horizontal">
            <div class="row form-group">
              <label for="recipient-name" class="col-sm-2 control-label">Name:</label>
              <div class="col-sm-10">
                <%= f.input :name, label: false, input_html: { class: 'form-control' } %>
              </div>
            </div>

            <div class="row form-group">
              <label for="recipient-name" class="col-sm-2 control-label">Photo:</label>
              <div class="col-sm-10">
                <%= f.input :photo, label: false, input_html: {class: 'form-control'} %>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancel</button>
          <button type="button" onclick="onModalNameFormSubmitted()" class="btn btn-primary">Done!</button>
        </div>
      </div>
    </div>
  </div>
<% end %>


<% content_for(:inline_javascript) do %>
  <script>

    function onModalNameFormSubmitted() {
      var recipeName = $('#recipe_name').val();

      if (recipeName.length > 0) {
        $('#new_recipe').submit();
      } else {
        alert('Please give your recipe a name.');
      }
    }

    function showRecipeNameModal() {
      var anyEmptySelectInput = $('.select-ingredient-name').filter(function(index, ingredientSelectItem) {
        return $(ingredientSelectItem).val() == '';
      })

      if (anyEmptySelectInput.length > 0) {
        alert('Please select ingredient');
      } else {
        $('#recipe-name-form-modal').modal({});
      }
    }

    function showHideSubmissionSection() {
      if ($('.dose-nested-fields').length > 0) {
        $('.form-submission-section').removeClass('hide');
      } else {
        $('.form-submission-section').addClass('hide');
      }
    }

    function updateVisualization() {
        var ids = [];
        $('.ingredient_name').each(function(i, item) {
          if ($(item).val() !== '') {
            ids.push($(item).val());
          }
        });


        var amounts = [];
        $('.ingredient_amount').each(function(i, item) {
          amounts.push($(item).val());
        });


        Object.keys(totalNutrients).forEach(function(nutrient) {
          totalNutrients[nutrient] = 0
        });


        for (var i = 0; i < ids.length; i += 1) {
          Object.keys(totalNutrients).forEach(function(nutrient) {
            var ingredient = ingredients.find(function(ingredient) {
              return ids[i] == ingredient.id;
            });
            totalNutrients[nutrient] = totalNutrients[nutrient] + ingredient[nutrient] * amounts[i]
          });
        }

        Object.keys(totalNutrients).forEach(function(nutrient) {
          var percentageValue = Math.round(totalNutrients[nutrient] / $('#' + nutrient + '_val').html() * 100);
          $('#' + nutrient).attr('aria-valuenow', percentageValue);
          $('#' + nutrient + '_percent').html(Number((totalNutrients[nutrient]).toFixed(2)) + $('#' + nutrient + '_unit').html() + "   |   " + percentageValue + "%");

          if (percentageValue < 100) {
            $('#' + nutrient).attr('style', "width: " + percentageValue + "%");
            $('#' + nutrient + '_percent').html(Number((totalNutrients[nutrient]).toFixed(2)) + $('#' + nutrient + '_unit').html() + "   |   " + percentageValue + "%" + "   |   need more");
            $('#' + nutrient).removeClass('progress-bar-danger');
            $('#' + nutrient).removeClass('progress-bar-success');
            $('#' + nutrient).addClass('progress-bar-warning');

          } else {
            $('#' + nutrient).attr('style', "width: 100%");
            $('#' + nutrient).removeClass('progress-bar-danger');
            $('#' + nutrient).removeClass('progress-bar-warning');
            $('#' + nutrient).addClass('progress-bar-success');
            if (nutrient == "fat_g" && percentageValue > 597) {
              $('#' + nutrient + '_percent').html(Number((totalNutrients[nutrient]).toFixed(2)) + $('#' + nutrient + '_unit').html() + "   |   " + percentageValue + "%" + "   |   too much");
              $('#' + nutrient).removeClass('progress-bar-warning');
              $('#' + nutrient).removeClass('progress-bar-success');
              $('#' + nutrient).addClass('progress-bar-danger');
            };
            if (nutrient == "calcium_mg" && percentageValue > 150) {
              $('#' + nutrient + '_percent').html(Number((totalNutrients[nutrient]).toFixed(2)) + $('#' + nutrient + '_unit').html() + "   |   " + percentageValue + "%" + "   |   too much");
              $('#' + nutrient).removeClass('progress-bar-warning');
              $('#' + nutrient).removeClass('progress-bar-success');
              $('#' + nutrient).addClass('progress-bar-danger');
            };
            if (nutrient == "vitamin_a_iu" && percentageValue > 4221) {
              $('#' + nutrient + '_percent').html(Number((totalNutrients[nutrient]).toFixed(2)) + $('#' + nutrient + '_unit').html() + "   |   " + percentageValue + "%" + "   |   too much");
              $('#' + nutrient).removeClass('progress-bar-warning');
              $('#' + nutrient).removeClass('progress-bar-success');
              $('#' + nutrient).addClass('progress-bar-danger');
            };
            if (nutrient == "vitamin_d_iu" && percentageValue > 588) {
              $('#' + nutrient + '_percent').html(Number((totalNutrients[nutrient]).toFixed(2)) + $('#' + nutrient + '_unit').html() + "   |   " + percentageValue + "%" + "   |   too much");
              $('#' + nutrient).removeClass('progress-bar-warning');
              $('#' + nutrient).removeClass('progress-bar-success');
              $('#' + nutrient).addClass('progress-bar-danger');
            };
          };

        });



    }

    $('#doses').on('cocoon:after-insert', function(e, insertedItem) {
      $('#doses .bootstrap-slider').slider({});

      showHideSubmissionSection();
    });

    $('#doses').on('cocoon:after-remove', function(e, insertedItem) {
      updateVisualization();

      showHideSubmissionSection();
    });

    showHideSubmissionSection();

    var ingredients = <%= raw Ingredient.order(:name).to_json %>;

    var totalNutrients = {energy_kcal:0,protein_g:0,fat_g:0,fiber_g:0,calcium_mg:0,iron_mg:0,magnesium_mg:0,phosphorus_mg:0,potassium_mg:0,sodium_mg:0,zinc_mg:0,niacin_mg:0,pyridoxine_mg:0,folate_ug:0,vitamin_b12_ug:0,vitamin_a_iu:0,vitamin_e_mg:0,vitamin_d_iu:0,riboflavin_mg:0,thiamin_mg:0}


    $(document).ready(function() {

      $(document).on('change', '.bootstrap-slider', function(event) {
        updateVisualization();
      });
      $(document).on('change', '.ingredient_name', function(event) {
        updateVisualization();
      });
      $(document).on('click', '.btn-minus', function(event) {
        updateVisualization();
      });

    });
  </script>
<% end %>
